spring.application.name=EcommerceApi

# Database Configuration
spring.datasource.url=${DB_URL}
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}
spring.datasource.driver-class-name=${DB_DRIVER}

# Hibernate & JPA Properties
spring.jpa.database-platform=${DB_PLATFORM}
spring.jpa.hibernate.ddl-auto=${DB_AUTO}
spring.jpa.show-sql=${DB_SQL}
spring.jpa.properties.hibernate.format_sql=${FORMAT_SQL}

#$bytes = New-Object byte[] 32
#(New-Object System.Security.Cryptography.RNGCryptoServiceProvider).GetBytes($bytes)
#[Convert]::ToBase64String($bytes)

# JWT Configuration
jwt.secret=${JWT_SECRET}

# Admin Configuration
admin.name=${ADMIN_NAME}
admin.email=${ADMIN_EMAIL}
admin.password=${ADMIN_PASSWORD}
admin.role=${ADMIN_ROLE}

# CORS Allowed Origins (Frontend URL)
cors.allowed-origins=${CORS_ORIGINAL}

# SendGrid Email Configuration
spring.mail.host=${SENDGRID_HOST}
spring.mail.port=${SENDGRID_PORT}
spring.mail.from=${SENDGRID_MAIL_FROM}
spring.mail.password=${SENDGRID_PASSWORD}
spring.mail.properties.mail.smtp.auth=${SENDGRID_AUTH}
spring.mail.properties.mail.smtp.starttls.enable=${SENDGRID_STARTTLS}
spring.mail.transport.protocol=${SENDGRID_PROTOCOL}
spring.mail.properties.mail.smtp.ssl.trust=${SENDGRID_SSL}

# Stripe Payment Configuration
stripe.api.key=${STRIPE_API_KEY}
stripe.success.url=${STRIPRE_SUCCESS_URL}
stripe.cancel.url=${STRIPE_CANCEL_URL}

# Cloudinary Configuration
cloudinary.cloud-name=${CLOUD_NAME}
cloudinary.api-key=${CLOUD_API_KEY}
cloudinary.api-secret=${CLOUD_API_SECRET}

# File Upload Configuration
file.enable=${FILE_ENABLE}
file.max-size=${FILE_MAX_SIZE}
file.max-request-size=${FILE_MAX_REQUEST_SIZE}